{"version":3,"sources":["Statistics/Statistics.js","ButtonsForFeedback/ButtonsForFeedback.js","SectionTitle/SectionTitle.js","Feedback/Feedback.js","App.js","index.js"],"names":["Statistics","this","props","stateDataForRender","map","data","countTotalFeedback","state","good","countPositiveFeedbackPercentage","Component","ButtonsForFeedback","prop","name","onClick","addFeedbackCount","nextId","SectionTitle","children","Feedback","neutral","bad","Object","values","reduce","acc","value","positivePercentage","Math","round","e","targetName","target","key","setState","prevState","feedbackCategories","stateForRender","entries","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA6BeA,E,4JA1Bb,WACE,OACE,qCACE,4CACA,6BACGC,KAAKC,MAAMC,mBAAmBC,KAAI,SAAAC,GAAI,OACrC,+BACGA,EAAK,GADR,KACcA,EAAK,KADVA,QAKb,+BACE,yCAAYJ,KAAKC,MAAMI,sBACvB,oDACqB,IAClBL,KAAKC,MAAMK,MAAMC,KAAO,EACrBP,KAAKC,MAAMO,gCACX,EAJN,iB,GAdeC,aCmBVC,E,4JAjBb,WAAU,IAAD,OACP,OACE,6BACGV,KAAKC,MAAMA,MAAME,KAAI,SAAAQ,GAAI,OACxB,wBACEC,KAAMD,EAENE,QAAS,EAAKZ,MAAMa,iBAHtB,SAKGH,GAHII,gB,GAPgBN,aCUlBO,E,4JAVb,WACE,OACE,gCACE,wDACA,8BAAMhB,KAAKC,MAAMgB,kB,GALER,aCsEZS,E,4MAjEbZ,MAAQ,CACNC,KAAM,EACNY,QAAS,EACTC,IAAK,G,EAGPf,mBAAqB,WAMnB,OALyBgB,OAAOC,OAAO,EAAKhB,OACJiB,QACtC,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IACtB,I,EAKJjB,gCAAkC,WAChC,IAAMkB,EACH,EAAKpB,MAAMC,KAAO,EAAKF,qBAAwB,IAClD,OAAOsB,KAAKC,MAAMF,I,EAGpBZ,iBAAmB,SAAAe,GACjB,IAAMC,EAAaD,EAAEE,OAAOnB,KADN,WAGboB,GACHF,IAAeE,GACjB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAME,EAAUF,GAAO,OAHvC,IAAK,IAAIA,KAAO,EAAK1B,MAAQ,EAApB0B,GAOT,EAAKxB,mC,4CAGP,WACE,IAAMP,EAAQD,KAAKC,MAAMkC,mBACnBC,EAAiBpC,KAAKM,MACtBJ,EAAqBmB,OAAOgB,QAAQD,GAE1C,OACE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,CAEEnC,MAAOA,EACPa,iBAAkBd,KAAKc,kBAFlBC,OAINf,KAAKM,MAAMC,KAAO,GACnBP,KAAKM,MAAMa,QAAU,GACrBnB,KAAKM,MAAMc,IAAM,EACf,cAAC,EAAD,CAEElB,mBAAoBA,EACpBG,mBAAoBL,KAAKK,qBACzBG,gCAAiCR,KAAKQ,kCACtCF,MAAON,KAAKM,OAJPS,OAOP,2D,GA3DWN,aCCR6B,MAJf,WACE,OAAO,cAAC,EAAD,CAAUH,mBAAoB,CAAC,OAAQ,UAAW,UCC3DI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.97395007.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Statistics</h2>\r\n        <ul>\r\n          {this.props.stateDataForRender.map(data => (\r\n            <li key={data}>\r\n              {data[0]}: {data[1]}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ul>\r\n          <li>total: {this.props.countTotalFeedback}</li>\r\n          <li>\r\n            positive feedback:{' '}\r\n            {this.props.state.good > 0\r\n              ? this.props.countPositiveFeedbackPercentage\r\n              : 0}\r\n            %\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import { Component } from 'react';\r\nimport nextId from 'react-id-generator';\r\n\r\nclass ButtonsForFeedback extends Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.props.map(prop => (\r\n          <button\r\n            name={prop}\r\n            key={nextId()}\r\n            onClick={this.props.addFeedbackCount}\r\n          >\r\n            {prop}\r\n          </button>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonsForFeedback;\r\n","import { Component } from 'react';\r\n\r\nclass SectionTitle extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Please, leave feedback</h1>\r\n        <div>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectionTitle;\r\n","import { Component } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport Statistics from '../Statistics';\r\nimport ButtonsForFeedback from '../ButtonsForFeedback';\r\nimport SectionTitle from '../SectionTitle';\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const arrOfStateValues = Object.values(this.state);\r\n    const stateValuesSum = arrOfStateValues.reduce(\r\n      (acc, value) => acc + value,\r\n      0,\r\n    );\r\n    return stateValuesSum;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positivePercentage =\r\n      (this.state.good / this.countTotalFeedback()) * 100;\r\n    return Math.round(positivePercentage);\r\n  };\r\n\r\n  addFeedbackCount = e => {\r\n    const targetName = e.target.name;\r\n\r\n    for (let key in this.state) {\r\n      if (targetName === key) {\r\n        this.setState(prevState => {\r\n          return { [key]: prevState[key] + 1 };\r\n        });\r\n      }\r\n    }\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  render() {\r\n    const props = this.props.feedbackCategories;\r\n    const stateForRender = this.state;\r\n    const stateDataForRender = Object.entries(stateForRender);\r\n\r\n    return (\r\n      <div>\r\n        <SectionTitle>\r\n          <ButtonsForFeedback\r\n            key={nextId()}\r\n            props={props}\r\n            addFeedbackCount={this.addFeedbackCount}\r\n          />\r\n          {this.state.good > 0 ||\r\n          this.state.neutral > 0 ||\r\n          this.state.bad > 0 ? (\r\n            <Statistics\r\n              key={nextId()}\r\n              stateDataForRender={stateDataForRender}\r\n              countTotalFeedback={this.countTotalFeedback()}\r\n              countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\r\n              state={this.state}\r\n            />\r\n          ) : (\r\n            <p>No feedback given</p>\r\n          )}\r\n        </SectionTitle>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Feedback;\r\n","import 'modern-normalize/modern-normalize.css';\nimport Feedback from './Feedback';\n\nfunction App() {\n  return <Feedback feedbackCategories={['good', 'neutral', 'bad']} />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}